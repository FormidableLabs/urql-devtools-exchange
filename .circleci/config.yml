version: 2

.node_env: &node_env
  docker:
    - image: node:13

.node_modules_cache: &node_modules_cache
  restore_cache:
    keys:
      - node-cache-{{ checksum "yarn.lock" }}-{{ checksum ".circleci/config.yml" }}

jobs:
  install:
    <<: *node_env
    steps:
      - checkout
      - *node_modules_cache
      - run:
          name: Check for dependencies
          command: '([[ -d node_modules ]] && circleci-agent step halt) || exit 0'
      - run: yarn install --frozen-lockfile
      - save_cache:
          key: node-cache-{{ checksum "yarn.lock" }}-{{ checksum ".circleci/config.yml" }}
          paths:
            - 'node_modules'

  lint:
    <<: *node_env
    steps:
      - checkout
      - *node_modules_cache
      - run: yarn run lint

  prettier:
    <<: *node_env
    steps:
      - checkout
      - *node_modules_cache
      - run: yarn run prettier-check

  test:
    <<: *node_env
    steps:
      - checkout
      - *node_modules_cache
      - run: yarn test

  build:
    <<: *node_env
    steps:
      - checkout
      - *node_modules_cache
      - run: yarn run build
      - save_cache:
          key: build-cache-{{ .Revision }}
          paths:
            - 'dist'

  deploy:
    <<: *node_env
    steps:
      - checkout
      - *node_modules_cache
      - run:
          command: |
            node -e "process.env.CIRCLE_TAG === \`v\${require('./package.json').version}\` ? process.exit(0) : (console.error('Tag version does not line up with version in package.json') || process.exit(1))"
            npm config set "//registry.npmjs.org/:_authToken" "$npm_TOKEN"
            npm publish --access=public
workflows:
  version: 2
  build_and_test:
    jobs:
      - install:
          filters:
            tags:
              only: /.*/
      - lint:
          requires:
            - install
          filters:
            tags:
              only: /.*/
      - prettier:
          requires:
            - install
          filters:
            tags:
              only: /.*/
      - test:
          requires:
            - install
          filters:
            tags:
              only: /.*/
      - build:
          requires:
            - install
          filters:
            tags:
              only: /.*/
      - deploy:
          requires:
            - install
            - lint
            - prettier
            - build
            - test
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
